;; -*-emacs-lisp-*-
;;
;; Emacs startup file for the Debian GNU/Linux edb package
;;
;; 2009-08-30 rewritten by Jari Aalto <jari.aalto@cante.net> for the 1.31.
;; Adapted for dh-make by Jim Van Zandt <jrv@vanzandt.mv.com>
;; Modified by Dirk Eddelbuettel <edd@debian.org>
;; Originally contributed by Nils Naumann <naumann@unileoben.ac.at>
;;
;; The edb package follows the Debian/GNU Linux 'emacsen' policy and
;; byte-compiles its elisp files for each 'emacs flavor' (emacs<NN>).
;; The compiled code is then installed in a subdirectory of the
;; respective site-lisp directory.

(defvar edb-directory)

;; Add this to the load-path:

(let* ((flavor (if (boundp 'debian-emacs-flavor)
		   (symbol-name debian-emacs-flavor)
		 "emacs"))
       (package-dir
	(format "/usr/share/%s/site-lisp/edb" flavor)))

  ;; If package-dir does not exist, the package must have
  ;; been removed but not purged, and we should skip the setup.
  (when (file-directory-p package-dir)

    (if (fboundp 'debian-pkg-add-load-path-item)
	(debian-pkg-add-load-path-item package-dir)
      (setq load-path (cons package-dir load-path)))

    (setq edb-directory
	  (format "/usr/share/%s/site-lisp/edb" flavor))

    (autoload 'edb-version		    "database" "EDB database package" t)
    (autoload 'edb-interact		    "database" "EDB database package" t)
    (autoload 'db-view-mode		    "edbcore"  "EDB database package" t)
    (autoload 'db-find-file		    "edbcore"  "EDB database package" t)
    (autoload 'db-edit-mode		    "edbcore"  "EDB database package" nil)
    (autoload 'database-mode	    "edbcore"  "EDB database package" nil)
    (autoload 'database-summary-mode    "edbcore"  "EDB database package" nil)

    (defvar edb-debian-inhibit-edb nil
      "*If non-nil, disable `edb-debian-after-find-file' in `find-file-hook'.")

    (add-hook 'find-file-hook 'edb-debian-after-find-file)

    (defun edb-debian-after-find-file ()
      "Turn on EDB if first like is ';; Database file written by EDB'.
This function is normally placed in `find-file-hooks'."
      ;; When called, point is at the beginning of the buffer.
      (when (and (not edb-debian-inhibit-edb)
		 (looking-at ";; Database file written by EDB"))
	(let ((file (buffer-file-name))
	      (find-file-hook find-file-hook))
	  ;; - We're already in the FILE, so kill buffer
	  ;;   and let db-* functions to load the file again
	  ;; - BUT disable ourselves while db-* runs
	  (kill-buffer (current-buffer))
	  (delq 'edb-debian-after-find-file find-file-hook)
	  (message "%s" find-file-hook)
	  (db-find-file file))))

)) ;; End let-when
